{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SAGI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SArBpB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OADAc,QAAQC,IAAIL,EAAOV,GAEf,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,SCJJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAGFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKtB,CAACtB,IAIGuB,EDxB2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAItB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGZ,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,aAA0BA,IAAKA,GAASA,GAAtBA,EAAIC,aEjBjCkB,EAAe,WACxB,MAAoC3C,mBAAS,CAAC,mBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MClBtC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.02726683.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const hadnleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // para que la pagina no se recargue\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats,])\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* <h2> {inputValue} </h2> */}\r\n\r\n            <input type=\"text\" value={inputValue} onChange={hadnleInputChange} />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=tuRyILluzwhRT1pc5yIp976T6g3qqHCE`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    console.log(title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} img={img} {...img} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state; // {data: [], loading: true}\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Jujutsu Kaisen']);\r\n\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['DragonBall', ...categories])\r\n    // setCategories(cats => [...cats, inputValue])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr></hr>\r\n\r\n            <ul>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n// gifExpertApp\n//<h2>GifExpertApp</h2>\n// <hr"],"sourceRoot":""}